---
import { getCollection } from "astro:content";
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import BookCards from "../../components/book/BookCard.astro";
// import NavBooks from "../../components/NavBooks.astro";
export async function getStaticPaths({ paginate }) {
   const posts = (await getCollection("book")).sort(
      (a, b) => b.data.bookPubDate.valueOf() - a.data.bookPubDate.valueOf()
   );
   // Generate pages from our array of astronauts, with 2 to a page
   return paginate(posts, { pageSize: 12 });
}
// All paginated data is passed on the "page" prop
const { page } = Astro.props;
---

<!doctype html>
<html lang="en">
   <head>
      <BaseHead title=`Books | ${SITE_TITLE}` description={SITE_DESCRIPTION} />
      <style>

         ul {
            display: flex;
            flex-wrap: wrap;
            gap: 2rem;
            list-style-type: none;
            margin: 0;
            padding: 0;
         }
         ul li {
            width: calc(50% - 1rem);
         }
         ul li * {
            text-decoration: none;
            transition: 0.2s ease;
         }
         ul li:first-child {
            width: 100%;
            margin-bottom: 1rem;
            text-align: center;
         }
         ul li:first-child img {
            width: 100%;
         }
         ul li:first-child .title {
            font-size: 2.369rem;
         }
         ul li img {
            margin-bottom: 0.5rem;
            border-radius: 12px;
         }
         ul li a {
            display: block;
         }
         .title {
            margin: 0;
            color: rgb(var(--black));
            line-height: 1;
         }
         .date {
            margin: 0;
            color: rgb(var(--gray));
         }
         ul li a:hover h4,
         ul li a:hover .date {
            color: rgb(var(--accent));
         }
         ul a:hover img {
            box-shadow: var(--box-shadow);
         }
         @media (max-width: 720px) {
            ul {
               gap: 0.5em;
            }
            ul li {
               width: 100%;
               text-align: center;
            }
            ul li:first-child {
               margin-bottom: 0;
            }
            ul li:first-child .title {
               font-size: 1.563em;
            }
         }
      </style>
   </head>
   <body>
      <Header />
      <main transition:animate="slide">
         <div class="section">
            <div class="container">
               <h1 class="section__header">Books</h1>
               <div class="cards cards--book-grid">
                  {
                     page.data.map((post) => (
                        <div class="card card--book">
                           <BookCards post={post} />
                        </div>
                     ))
                  }
               </div>
            </div>
         </div>
      </main>
      <Footer bookID="" location="book-archive" class:list={"book-archive"} />
      <style>
         .cards {
         }
         /* Single card on the grid */
         .card {
            border-radius: 14px;
            background-color: var(--color__background-book-card);
            margin-block: 1rem;
         }
         @media (min-width: 720px) {
            .cards {
               display: grid;
               grid-template-columns: repeat(2, 1fr);
               gap: 5vh 5vw;
               align-items: stretch;
            }
         }
         @media (min-width: 1200px) {
            .cards {
               grid-template-columns: repeat(3, 1fr);
            }
         }
      </style>
      <script is:inline>
         document.addEventListener("astro:page-load", () => {
            const ele = document.querySelector(".cards--book-grid");

            if (ele) {
               // Register GSAP plugins
               gsap.registerPlugin(ScrollTrigger);

               // Constants
               const header = document.querySelector(".section__header");
               const wrapper = ele.querySelector(".cards");
               const cards = gsap.utils.toArray(".card", ele);


               if (!wrapper || wrapper.length == 0) {
                  return;
               }

               // Load GSAP Timelines
               let tlMain = gsap.timeline({
                  scrollTrigger: {
                     trigger: ".card",
                     start: "top bottom",
                     once: true,
                     scrub: true,
                     onEnter: init,
                  },
                  paused: true,
                  id: "",
               });

               let tlCarousel = gsap.timeline({ paused: true, id: "" });
               /**
                * Add Tweens To TL -> Carousel
                * @param {string} carousel
                */
               function addTweensToTlCarousel() {
                  const tl = tlCarousel;
                  tl.fromTo(
                     header,
                     { autoAlpha: 0, y: -30 },
                     { autoAlpha: 1, y: 0, duration: 0.5 },
                     0
                  );
                  tl.fromTo(
                     wrapper,
                     { autoAlpha: 0, y: -30 },
                     { autoAlpha: 1, y: 0, duration: 0.5 },
                     0.2
                  );
                  tl.fromTo(
                     cards,
                     { autoAlpha: 0, y: -30 },
                     { autoAlpha: 1, y: 0, duration: 0.5, stagger: 0.2 },
                     0.3
                  );
                  return tl;
               }

               // Set up the animations
               function setup() {
                  const tl = tlCarousel;
                  tl.set([header, wrapper], { autoAlpha: 0 });
                  tl.play(); // Play animation
               }

               setup(); // Run setup

               // Play the loader tl
               function init() {
                  addTweensToTlCarousel();
                  tlCarousel.play();
               }
            }
         });
      </script>
   </body>
</html>
